requireするときは相対パスを使用する、.jsは省略可
※単にファイル名のみだと誰かが作ったファイルをrequireする

module.exports = {
    add: add,
    PI: PI,
    square: square
}

↑　上記のように明示的にexportsしないとrequireできない

★ディレクトリをrequireする
デフォルトでindex.jsが参照されて
index.jsでexportsされているものがrequireで手に入る。

★npm
1.他の開発者が公開している何万ものパッケージが管理されている場所
2.パッケージをNode.jsのプロジェクトに簡単にインストールし
管理するためのコマンドラインツール

-g を付与してのnpmインストール→グローバル
コマンドラインツールを使用する際に使用

npm init
簡単にpackage.jsonが作成できる。プロジェクトを管理できる
ルートディレクトリの直下に設定することがほとんど
dependencies 
↑この情報からプロジェクトで使用しているnpmが分かる

package.json
基本的にNode_modulesはアップロードしないので
package.jsonのdependenciesが重要となってくる
package.jsonは存在するが、Node_modulesが存在しないため
プログラムが実行できない場合
→ package.jsonがあるパッケージで npm install　を実行する
dependenciesがインストールされてプログラムが実行できる

francパッケージについて
ver6.0.0以降
npm i franc langs → npm i franc@5.0.0 langs
もしくは
var franc = require('franc');
↓
import {franc} from 'franc'